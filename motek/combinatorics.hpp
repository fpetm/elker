#pragma once
#include <algorithm>
#include <array>
#include <vector>

#include <cstdint>

#include "variations.hpp"

namespace motek::combinatorics {
constexpr size_t g_BitCount = 4;
const std::array<std::vector<uint64_t>, 11> g_Compositions = {
    std::vector<uint64_t>{},
    std::vector<uint64_t>{
        0xA,
    },
    std::vector<uint64_t>{
        0x91,
        0x82,
        0x73,
        0x64,
        0x55,
        0x46,
        0x37,
        0x28,
        0x19,
    },
    std::vector<uint64_t>{
        0x811, 0x721, 0x631, 0x541, 0x451, 0x361, 0x271, 0x181, 0x712,
        0x622, 0x532, 0x442, 0x352, 0x262, 0x172, 0x613, 0x523, 0x433,
        0x343, 0x253, 0x163, 0x514, 0x424, 0x334, 0x244, 0x154, 0x415,
        0x325, 0x235, 0x145, 0x316, 0x226, 0x136, 0x217, 0x127, 0x118,
    },
    std::vector<uint64_t>{
        0x7111, 0x6211, 0x5311, 0x4411, 0x3511, 0x2611, 0x1711, 0x6121, 0x5221,
        0x4321, 0x3421, 0x2521, 0x1621, 0x5131, 0x4231, 0x3331, 0x2431, 0x1531,
        0x4141, 0x3241, 0x2341, 0x1441, 0x3151, 0x2251, 0x1351, 0x2161, 0x1261,
        0x1171, 0x6112, 0x5212, 0x4312, 0x3412, 0x2512, 0x1612, 0x5122, 0x4222,
        0x3322, 0x2422, 0x1522, 0x4132, 0x3232, 0x2332, 0x1432, 0x3142, 0x2242,
        0x1342, 0x2152, 0x1252, 0x1162, 0x5113, 0x4213, 0x3313, 0x2413, 0x1513,
        0x4123, 0x3223, 0x2323, 0x1423, 0x3133, 0x2233, 0x1333, 0x2143, 0x1243,
        0x1153, 0x4114, 0x3214, 0x2314, 0x1414, 0x3124, 0x2224, 0x1324, 0x2134,
        0x1234, 0x1144, 0x3115, 0x2215, 0x1315, 0x2125, 0x1225, 0x1135, 0x2116,
        0x1216, 0x1126, 0x1117,
    },
    std::vector<uint64_t>{
        0x61111, 0x52111, 0x43111, 0x34111, 0x25111, 0x16111, 0x51211, 0x42211,
        0x33211, 0x24211, 0x15211, 0x41311, 0x32311, 0x23311, 0x14311, 0x31411,
        0x22411, 0x13411, 0x21511, 0x12511, 0x11611, 0x51121, 0x42121, 0x33121,
        0x24121, 0x15121, 0x41221, 0x32221, 0x23221, 0x14221, 0x31321, 0x22321,
        0x13321, 0x21421, 0x12421, 0x11521, 0x41131, 0x32131, 0x23131, 0x14131,
        0x31231, 0x22231, 0x13231, 0x21331, 0x12331, 0x11431, 0x31141, 0x22141,
        0x13141, 0x21241, 0x12241, 0x11341, 0x21151, 0x12151, 0x11251, 0x11161,
        0x51112, 0x42112, 0x33112, 0x24112, 0x15112, 0x41212, 0x32212, 0x23212,
        0x14212, 0x31312, 0x22312, 0x13312, 0x21412, 0x12412, 0x11512, 0x41122,
        0x32122, 0x23122, 0x14122, 0x31222, 0x22222, 0x13222, 0x21322, 0x12322,
        0x11422, 0x31132, 0x22132, 0x13132, 0x21232, 0x12232, 0x11332, 0x21142,
        0x12142, 0x11242, 0x11152, 0x41113, 0x32113, 0x23113, 0x14113, 0x31213,
        0x22213, 0x13213, 0x21313, 0x12313, 0x11413, 0x31123, 0x22123, 0x13123,
        0x21223, 0x12223, 0x11323, 0x21133, 0x12133, 0x11233, 0x11143, 0x31114,
        0x22114, 0x13114, 0x21214, 0x12214, 0x11314, 0x21124, 0x12124, 0x11224,
        0x11134, 0x21115, 0x12115, 0x11215, 0x11125, 0x11116,
    },
    std::vector<uint64_t>{
        0x511111, 0x421111, 0x331111, 0x241111, 0x151111, 0x412111, 0x322111,
        0x232111, 0x142111, 0x313111, 0x223111, 0x133111, 0x214111, 0x124111,
        0x115111, 0x411211, 0x321211, 0x231211, 0x141211, 0x312211, 0x222211,
        0x132211, 0x213211, 0x123211, 0x114211, 0x311311, 0x221311, 0x131311,
        0x212311, 0x122311, 0x113311, 0x211411, 0x121411, 0x112411, 0x111511,
        0x411121, 0x321121, 0x231121, 0x141121, 0x312121, 0x222121, 0x132121,
        0x213121, 0x123121, 0x114121, 0x311221, 0x221221, 0x131221, 0x212221,
        0x122221, 0x113221, 0x211321, 0x121321, 0x112321, 0x111421, 0x311131,
        0x221131, 0x131131, 0x212131, 0x122131, 0x113131, 0x211231, 0x121231,
        0x112231, 0x111331, 0x211141, 0x121141, 0x112141, 0x111241, 0x111151,
        0x411112, 0x321112, 0x231112, 0x141112, 0x312112, 0x222112, 0x132112,
        0x213112, 0x123112, 0x114112, 0x311212, 0x221212, 0x131212, 0x212212,
        0x122212, 0x113212, 0x211312, 0x121312, 0x112312, 0x111412, 0x311122,
        0x221122, 0x131122, 0x212122, 0x122122, 0x113122, 0x211222, 0x121222,
        0x112222, 0x111322, 0x211132, 0x121132, 0x112132, 0x111232, 0x111142,
        0x311113, 0x221113, 0x131113, 0x212113, 0x122113, 0x113113, 0x211213,
        0x121213, 0x112213, 0x111313, 0x211123, 0x121123, 0x112123, 0x111223,
        0x111133, 0x211114, 0x121114, 0x112114, 0x111214, 0x111124, 0x111115,
    },
    std::vector<uint64_t>{
        0x4111111, 0x3211111, 0x2311111, 0x1411111, 0x3121111, 0x2221111,
        0x1321111, 0x2131111, 0x1231111, 0x1141111, 0x3112111, 0x2212111,
        0x1312111, 0x2122111, 0x1222111, 0x1132111, 0x2113111, 0x1213111,
        0x1123111, 0x1114111, 0x3111211, 0x2211211, 0x1311211, 0x2121211,
        0x1221211, 0x1131211, 0x2112211, 0x1212211, 0x1122211, 0x1113211,
        0x2111311, 0x1211311, 0x1121311, 0x1112311, 0x1111411, 0x3111121,
        0x2211121, 0x1311121, 0x2121121, 0x1221121, 0x1131121, 0x2112121,
        0x1212121, 0x1122121, 0x1113121, 0x2111221, 0x1211221, 0x1121221,
        0x1112221, 0x1111321, 0x2111131, 0x1211131, 0x1121131, 0x1112131,
        0x1111231, 0x1111141, 0x3111112, 0x2211112, 0x1311112, 0x2121112,
        0x1221112, 0x1131112, 0x2112112, 0x1212112, 0x1122112, 0x1113112,
        0x2111212, 0x1211212, 0x1121212, 0x1112212, 0x1111312, 0x2111122,
        0x1211122, 0x1121122, 0x1112122, 0x1111222, 0x1111132, 0x2111113,
        0x1211113, 0x1121113, 0x1112113, 0x1111213, 0x1111123, 0x1111114,
    },
    std::vector<uint64_t>{
        0x31111111, 0x22111111, 0x13111111, 0x21211111, 0x12211111, 0x11311111,
        0x21121111, 0x12121111, 0x11221111, 0x11131111, 0x21112111, 0x12112111,
        0x11212111, 0x11122111, 0x11113111, 0x21111211, 0x12111211, 0x11211211,
        0x11121211, 0x11112211, 0x11111311, 0x21111121, 0x12111121, 0x11211121,
        0x11121121, 0x11112121, 0x11111221, 0x11111131, 0x21111112, 0x12111112,
        0x11211112, 0x11121112, 0x11112112, 0x11111212, 0x11111122, 0x11111113,
    },
    std::vector<uint64_t>{
        0x211111111,
        0x121111111,
        0x112111111,
        0x111211111,
        0x111121111,
        0x111112111,
        0x111111211,
        0x111111121,
        0x111111112,
    },
    std::vector<uint64_t>{
        0x1111111111,
    },
};

const std::array<std::vector<uint64_t>, 11> g_CompositionsAccumulated = {
    std::vector<uint64_t>{},
    std::vector<uint64_t>{
        0xA,
    },
    std::vector<uint64_t>{
        0xA1,
        0xA2,
        0xA3,
        0xA4,
        0xA5,
        0xA6,
        0xA7,
        0xA8,
        0xA9,
    },
    std::vector<uint64_t>{
        0xA21, 0xA31, 0xA41, 0xA51, 0xA61, 0xA71, 0xA81, 0xA91, 0xA32,
        0xA42, 0xA52, 0xA62, 0xA72, 0xA82, 0xA92, 0xA43, 0xA53, 0xA63,
        0xA73, 0xA83, 0xA93, 0xA54, 0xA64, 0xA74, 0xA84, 0xA94, 0xA65,
        0xA75, 0xA85, 0xA95, 0xA76, 0xA86, 0xA96, 0xA87, 0xA97, 0xA98,
    },
    std::vector<uint64_t>{
        0xA321, 0xA421, 0xA521, 0xA621, 0xA721, 0xA821, 0xA921, 0xA431, 0xA531,
        0xA631, 0xA731, 0xA831, 0xA931, 0xA541, 0xA641, 0xA741, 0xA841, 0xA941,
        0xA651, 0xA751, 0xA851, 0xA951, 0xA761, 0xA861, 0xA961, 0xA871, 0xA971,
        0xA981, 0xA432, 0xA532, 0xA632, 0xA732, 0xA832, 0xA932, 0xA542, 0xA642,
        0xA742, 0xA842, 0xA942, 0xA652, 0xA752, 0xA852, 0xA952, 0xA762, 0xA862,
        0xA962, 0xA872, 0xA972, 0xA982, 0xA543, 0xA643, 0xA743, 0xA843, 0xA943,
        0xA653, 0xA753, 0xA853, 0xA953, 0xA763, 0xA863, 0xA963, 0xA873, 0xA973,
        0xA983, 0xA654, 0xA754, 0xA854, 0xA954, 0xA764, 0xA864, 0xA964, 0xA874,
        0xA974, 0xA984, 0xA765, 0xA865, 0xA965, 0xA875, 0xA975, 0xA985, 0xA876,
        0xA976, 0xA986, 0xA987,
    },
    std::vector<uint64_t>{
        0xA4321, 0xA5321, 0xA6321, 0xA7321, 0xA8321, 0xA9321, 0xA5421, 0xA6421,
        0xA7421, 0xA8421, 0xA9421, 0xA6521, 0xA7521, 0xA8521, 0xA9521, 0xA7621,
        0xA8621, 0xA9621, 0xA8721, 0xA9721, 0xA9821, 0xA5431, 0xA6431, 0xA7431,
        0xA8431, 0xA9431, 0xA6531, 0xA7531, 0xA8531, 0xA9531, 0xA7631, 0xA8631,
        0xA9631, 0xA8731, 0xA9731, 0xA9831, 0xA6541, 0xA7541, 0xA8541, 0xA9541,
        0xA7641, 0xA8641, 0xA9641, 0xA8741, 0xA9741, 0xA9841, 0xA7651, 0xA8651,
        0xA9651, 0xA8751, 0xA9751, 0xA9851, 0xA8761, 0xA9761, 0xA9861, 0xA9871,
        0xA5432, 0xA6432, 0xA7432, 0xA8432, 0xA9432, 0xA6532, 0xA7532, 0xA8532,
        0xA9532, 0xA7632, 0xA8632, 0xA9632, 0xA8732, 0xA9732, 0xA9832, 0xA6542,
        0xA7542, 0xA8542, 0xA9542, 0xA7642, 0xA8642, 0xA9642, 0xA8742, 0xA9742,
        0xA9842, 0xA7652, 0xA8652, 0xA9652, 0xA8752, 0xA9752, 0xA9852, 0xA8762,
        0xA9762, 0xA9862, 0xA9872, 0xA6543, 0xA7543, 0xA8543, 0xA9543, 0xA7643,
        0xA8643, 0xA9643, 0xA8743, 0xA9743, 0xA9843, 0xA7653, 0xA8653, 0xA9653,
        0xA8753, 0xA9753, 0xA9853, 0xA8763, 0xA9763, 0xA9863, 0xA9873, 0xA7654,
        0xA8654, 0xA9654, 0xA8754, 0xA9754, 0xA9854, 0xA8764, 0xA9764, 0xA9864,
        0xA9874, 0xA8765, 0xA9765, 0xA9865, 0xA9875, 0xA9876,
    },
    std::vector<uint64_t>{
        0xA54321, 0xA64321, 0xA74321, 0xA84321, 0xA94321, 0xA65321, 0xA75321,
        0xA85321, 0xA95321, 0xA76321, 0xA86321, 0xA96321, 0xA87321, 0xA97321,
        0xA98321, 0xA65421, 0xA75421, 0xA85421, 0xA95421, 0xA76421, 0xA86421,
        0xA96421, 0xA87421, 0xA97421, 0xA98421, 0xA76521, 0xA86521, 0xA96521,
        0xA87521, 0xA97521, 0xA98521, 0xA87621, 0xA97621, 0xA98621, 0xA98721,
        0xA65431, 0xA75431, 0xA85431, 0xA95431, 0xA76431, 0xA86431, 0xA96431,
        0xA87431, 0xA97431, 0xA98431, 0xA76531, 0xA86531, 0xA96531, 0xA87531,
        0xA97531, 0xA98531, 0xA87631, 0xA97631, 0xA98631, 0xA98731, 0xA76541,
        0xA86541, 0xA96541, 0xA87541, 0xA97541, 0xA98541, 0xA87641, 0xA97641,
        0xA98641, 0xA98741, 0xA87651, 0xA97651, 0xA98651, 0xA98751, 0xA98761,
        0xA65432, 0xA75432, 0xA85432, 0xA95432, 0xA76432, 0xA86432, 0xA96432,
        0xA87432, 0xA97432, 0xA98432, 0xA76532, 0xA86532, 0xA96532, 0xA87532,
        0xA97532, 0xA98532, 0xA87632, 0xA97632, 0xA98632, 0xA98732, 0xA76542,
        0xA86542, 0xA96542, 0xA87542, 0xA97542, 0xA98542, 0xA87642, 0xA97642,
        0xA98642, 0xA98742, 0xA87652, 0xA97652, 0xA98652, 0xA98752, 0xA98762,
        0xA76543, 0xA86543, 0xA96543, 0xA87543, 0xA97543, 0xA98543, 0xA87643,
        0xA97643, 0xA98643, 0xA98743, 0xA87653, 0xA97653, 0xA98653, 0xA98753,
        0xA98763, 0xA87654, 0xA97654, 0xA98654, 0xA98754, 0xA98764, 0xA98765,
    },
    std::vector<uint64_t>{
        0xA654321, 0xA754321, 0xA854321, 0xA954321, 0xA764321, 0xA864321,
        0xA964321, 0xA874321, 0xA974321, 0xA984321, 0xA765321, 0xA865321,
        0xA965321, 0xA875321, 0xA975321, 0xA985321, 0xA876321, 0xA976321,
        0xA986321, 0xA987321, 0xA765421, 0xA865421, 0xA965421, 0xA875421,
        0xA975421, 0xA985421, 0xA876421, 0xA976421, 0xA986421, 0xA987421,
        0xA876521, 0xA976521, 0xA986521, 0xA987521, 0xA987621, 0xA765431,
        0xA865431, 0xA965431, 0xA875431, 0xA975431, 0xA985431, 0xA876431,
        0xA976431, 0xA986431, 0xA987431, 0xA876531, 0xA976531, 0xA986531,
        0xA987531, 0xA987631, 0xA876541, 0xA976541, 0xA986541, 0xA987541,
        0xA987641, 0xA987651, 0xA765432, 0xA865432, 0xA965432, 0xA875432,
        0xA975432, 0xA985432, 0xA876432, 0xA976432, 0xA986432, 0xA987432,
        0xA876532, 0xA976532, 0xA986532, 0xA987532, 0xA987632, 0xA876542,
        0xA976542, 0xA986542, 0xA987542, 0xA987642, 0xA987652, 0xA876543,
        0xA976543, 0xA986543, 0xA987543, 0xA987643, 0xA987653, 0xA987654,
    },
    std::vector<uint64_t>{
        0xA7654321, 0xA8654321, 0xA9654321, 0xA8754321, 0xA9754321, 0xA9854321,
        0xA8764321, 0xA9764321, 0xA9864321, 0xA9874321, 0xA8765321, 0xA9765321,
        0xA9865321, 0xA9875321, 0xA9876321, 0xA8765421, 0xA9765421, 0xA9865421,
        0xA9875421, 0xA9876421, 0xA9876521, 0xA8765431, 0xA9765431, 0xA9865431,
        0xA9875431, 0xA9876431, 0xA9876531, 0xA9876541, 0xA8765432, 0xA9765432,
        0xA9865432, 0xA9875432, 0xA9876432, 0xA9876532, 0xA9876542, 0xA9876543,
    },
    std::vector<uint64_t>{
        0xA87654321,
        0xA97654321,
        0xA98654321,
        0xA98754321,
        0xA98764321,
        0xA98765321,
        0xA98765421,
        0xA98765431,
        0xA98765432,
    },
    std::vector<uint64_t>{
        0xA987654321,
    },
};

const std::array<std::vector<uint64_t>, 11> g_CompositionsFlat = {
    std::vector<uint64_t>{},
    std::vector<uint64_t>{
        0x0,
    },
    std::vector<uint64_t>{
        0x1111111110,
        0x1111111100,
        0x1111111000,
        0x1111110000,
        0x1111100000,
        0x1111000000,
        0x1110000000,
        0x1100000000,
        0x1000000000,
    },
    std::vector<uint64_t>{
        0x2222222210, 0x2222222110, 0x2222221110, 0x2222211110, 0x2222111110,
        0x2221111110, 0x2211111110, 0x2111111110, 0x2222222100, 0x2222221100,
        0x2222211100, 0x2222111100, 0x2221111100, 0x2211111100, 0x2111111100,
        0x2222221000, 0x2222211000, 0x2222111000, 0x2221111000, 0x2211111000,
        0x2111111000, 0x2222210000, 0x2222110000, 0x2221110000, 0x2211110000,
        0x2111110000, 0x2222100000, 0x2221100000, 0x2211100000, 0x2111100000,
        0x2221000000, 0x2211000000, 0x2111000000, 0x2210000000, 0x2110000000,
        0x2100000000,
    },
    std::vector<uint64_t>{
        0x3333333210, 0x3333332210, 0x3333322210, 0x3333222210, 0x3332222210,
        0x3322222210, 0x3222222210, 0x3333332110, 0x3333322110, 0x3333222110,
        0x3332222110, 0x3322222110, 0x3222222110, 0x3333321110, 0x3333221110,
        0x3332221110, 0x3322221110, 0x3222221110, 0x3333211110, 0x3332211110,
        0x3322211110, 0x3222211110, 0x3332111110, 0x3322111110, 0x3222111110,
        0x3321111110, 0x3221111110, 0x3211111110, 0x3333332100, 0x3333322100,
        0x3333222100, 0x3332222100, 0x3322222100, 0x3222222100, 0x3333321100,
        0x3333221100, 0x3332221100, 0x3322221100, 0x3222221100, 0x3333211100,
        0x3332211100, 0x3322211100, 0x3222211100, 0x3332111100, 0x3322111100,
        0x3222111100, 0x3321111100, 0x3221111100, 0x3211111100, 0x3333321000,
        0x3333221000, 0x3332221000, 0x3322221000, 0x3222221000, 0x3333211000,
        0x3332211000, 0x3322211000, 0x3222211000, 0x3332111000, 0x3322111000,
        0x3222111000, 0x3321111000, 0x3221111000, 0x3211111000, 0x3333210000,
        0x3332210000, 0x3322210000, 0x3222210000, 0x3332110000, 0x3322110000,
        0x3222110000, 0x3321110000, 0x3221110000, 0x3211110000, 0x3332100000,
        0x3322100000, 0x3222100000, 0x3321100000, 0x3221100000, 0x3211100000,
        0x3321000000, 0x3221000000, 0x3211000000, 0x3210000000,
    },
    std::vector<uint64_t>{
        0x4444443210, 0x4444433210, 0x4444333210, 0x4443333210, 0x4433333210,
        0x4333333210, 0x4444432210, 0x4444332210, 0x4443332210, 0x4433332210,
        0x4333332210, 0x4444322210, 0x4443322210, 0x4433322210, 0x4333322210,
        0x4443222210, 0x4433222210, 0x4333222210, 0x4432222210, 0x4332222210,
        0x4322222210, 0x4444432110, 0x4444332110, 0x4443332110, 0x4433332110,
        0x4333332110, 0x4444322110, 0x4443322110, 0x4433322110, 0x4333322110,
        0x4443222110, 0x4433222110, 0x4333222110, 0x4432222110, 0x4332222110,
        0x4322222110, 0x4444321110, 0x4443321110, 0x4433321110, 0x4333321110,
        0x4443221110, 0x4433221110, 0x4333221110, 0x4432221110, 0x4332221110,
        0x4322221110, 0x4443211110, 0x4433211110, 0x4333211110, 0x4432211110,
        0x4332211110, 0x4322211110, 0x4432111110, 0x4332111110, 0x4322111110,
        0x4321111110, 0x4444432100, 0x4444332100, 0x4443332100, 0x4433332100,
        0x4333332100, 0x4444322100, 0x4443322100, 0x4433322100, 0x4333322100,
        0x4443222100, 0x4433222100, 0x4333222100, 0x4432222100, 0x4332222100,
        0x4322222100, 0x4444321100, 0x4443321100, 0x4433321100, 0x4333321100,
        0x4443221100, 0x4433221100, 0x4333221100, 0x4432221100, 0x4332221100,
        0x4322221100, 0x4443211100, 0x4433211100, 0x4333211100, 0x4432211100,
        0x4332211100, 0x4322211100, 0x4432111100, 0x4332111100, 0x4322111100,
        0x4321111100, 0x4444321000, 0x4443321000, 0x4433321000, 0x4333321000,
        0x4443221000, 0x4433221000, 0x4333221000, 0x4432221000, 0x4332221000,
        0x4322221000, 0x4443211000, 0x4433211000, 0x4333211000, 0x4432211000,
        0x4332211000, 0x4322211000, 0x4432111000, 0x4332111000, 0x4322111000,
        0x4321111000, 0x4443210000, 0x4433210000, 0x4333210000, 0x4432210000,
        0x4332210000, 0x4322210000, 0x4432110000, 0x4332110000, 0x4322110000,
        0x4321110000, 0x4432100000, 0x4332100000, 0x4322100000, 0x4321100000,
        0x4321000000,
    },
    std::vector<uint64_t>{
        0x5555543210, 0x5555443210, 0x5554443210, 0x5544443210, 0x5444443210,
        0x5555433210, 0x5554433210, 0x5544433210, 0x5444433210, 0x5554333210,
        0x5544333210, 0x5444333210, 0x5543333210, 0x5443333210, 0x5433333210,
        0x5555432210, 0x5554432210, 0x5544432210, 0x5444432210, 0x5554332210,
        0x5544332210, 0x5444332210, 0x5543332210, 0x5443332210, 0x5433332210,
        0x5554322210, 0x5544322210, 0x5444322210, 0x5543322210, 0x5443322210,
        0x5433322210, 0x5543222210, 0x5443222210, 0x5433222210, 0x5432222210,
        0x5555432110, 0x5554432110, 0x5544432110, 0x5444432110, 0x5554332110,
        0x5544332110, 0x5444332110, 0x5543332110, 0x5443332110, 0x5433332110,
        0x5554322110, 0x5544322110, 0x5444322110, 0x5543322110, 0x5443322110,
        0x5433322110, 0x5543222110, 0x5443222110, 0x5433222110, 0x5432222110,
        0x5554321110, 0x5544321110, 0x5444321110, 0x5543321110, 0x5443321110,
        0x5433321110, 0x5543221110, 0x5443221110, 0x5433221110, 0x5432221110,
        0x5543211110, 0x5443211110, 0x5433211110, 0x5432211110, 0x5432111110,
        0x5555432100, 0x5554432100, 0x5544432100, 0x5444432100, 0x5554332100,
        0x5544332100, 0x5444332100, 0x5543332100, 0x5443332100, 0x5433332100,
        0x5554322100, 0x5544322100, 0x5444322100, 0x5543322100, 0x5443322100,
        0x5433322100, 0x5543222100, 0x5443222100, 0x5433222100, 0x5432222100,
        0x5554321100, 0x5544321100, 0x5444321100, 0x5543321100, 0x5443321100,
        0x5433321100, 0x5543221100, 0x5443221100, 0x5433221100, 0x5432221100,
        0x5543211100, 0x5443211100, 0x5433211100, 0x5432211100, 0x5432111100,
        0x5554321000, 0x5544321000, 0x5444321000, 0x5543321000, 0x5443321000,
        0x5433321000, 0x5543221000, 0x5443221000, 0x5433221000, 0x5432221000,
        0x5543211000, 0x5443211000, 0x5433211000, 0x5432211000, 0x5432111000,
        0x5543210000, 0x5443210000, 0x5433210000, 0x5432210000, 0x5432110000,
        0x5432100000,
    },
    std::vector<uint64_t>{
        0x6666543210, 0x6665543210, 0x6655543210, 0x6555543210, 0x6665443210,
        0x6655443210, 0x6555443210, 0x6654443210, 0x6554443210, 0x6544443210,
        0x6665433210, 0x6655433210, 0x6555433210, 0x6654433210, 0x6554433210,
        0x6544433210, 0x6654333210, 0x6554333210, 0x6544333210, 0x6543333210,
        0x6665432210, 0x6655432210, 0x6555432210, 0x6654432210, 0x6554432210,
        0x6544432210, 0x6654332210, 0x6554332210, 0x6544332210, 0x6543332210,
        0x6654322210, 0x6554322210, 0x6544322210, 0x6543322210, 0x6543222210,
        0x6665432110, 0x6655432110, 0x6555432110, 0x6654432110, 0x6554432110,
        0x6544432110, 0x6654332110, 0x6554332110, 0x6544332110, 0x6543332110,
        0x6654322110, 0x6554322110, 0x6544322110, 0x6543322110, 0x6543222110,
        0x6654321110, 0x6554321110, 0x6544321110, 0x6543321110, 0x6543221110,
        0x6543211110, 0x6665432100, 0x6655432100, 0x6555432100, 0x6654432100,
        0x6554432100, 0x6544432100, 0x6654332100, 0x6554332100, 0x6544332100,
        0x6543332100, 0x6654322100, 0x6554322100, 0x6544322100, 0x6543322100,
        0x6543222100, 0x6654321100, 0x6554321100, 0x6544321100, 0x6543321100,
        0x6543221100, 0x6543211100, 0x6654321000, 0x6554321000, 0x6544321000,
        0x6543321000, 0x6543221000, 0x6543211000, 0x6543210000,
    },
    std::vector<uint64_t>{
        0x7776543210, 0x7766543210, 0x7666543210, 0x7765543210, 0x7665543210,
        0x7655543210, 0x7765443210, 0x7665443210, 0x7655443210, 0x7654443210,
        0x7765433210, 0x7665433210, 0x7655433210, 0x7654433210, 0x7654333210,
        0x7765432210, 0x7665432210, 0x7655432210, 0x7654432210, 0x7654332210,
        0x7654322210, 0x7765432110, 0x7665432110, 0x7655432110, 0x7654432110,
        0x7654332110, 0x7654322110, 0x7654321110, 0x7765432100, 0x7665432100,
        0x7655432100, 0x7654432100, 0x7654332100, 0x7654322100, 0x7654321100,
        0x7654321000,
    },
    std::vector<uint64_t>{
        0x8876543210,
        0x8776543210,
        0x8766543210,
        0x8765543210,
        0x8765443210,
        0x8765433210,
        0x8765432210,
        0x8765432110,
        0x8765432100,
    },
    std::vector<uint64_t>{
        0x9876543210,
    },
};

constexpr uint64_t at(uint64_t element, uint64_t index) {
  const uint64_t shiftn = 4 * index;
  const uint64_t mask = static_cast<uint64_t>(0xF) << shiftn;
  return (element & mask) >> shiftn;
}

constexpr size_t nCr(size_t n, size_t c) {
  size_t num = 1, denom = 1;
  for (size_t k = 0; k < c; k++) {
    num *= n - k;
    denom *= k + 1;
  }

  return num / denom;
}

constexpr std::vector<std::vector<size_t>> combination(size_t n, size_t s) {
  // std::cout << n << " : " << s << "\n";
  if (n < s || n < 0)
    return {};
  std::vector<bool> mask(n);
  std::fill(mask.end() - s, mask.end(), true);

  std::vector<std::vector<size_t>> r(nCr(n, s));
  size_t k = 0;
  do {
    r[k].resize(s);
    size_t j = 0;
    for (size_t i = 0; i < n; i++) {
      if (mask[i])
        r[k][j++] = i;
    }
    k++;
  } while (std::next_permutation(mask.begin(), mask.end()));

  return r;
}
} // namespace motek::combinatorics
